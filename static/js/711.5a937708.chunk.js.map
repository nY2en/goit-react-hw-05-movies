{"version":3,"file":"static/js/711.5a937708.chunk.js","mappings":"yQAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,6QAkBVE,EAAaF,EAAAA,EAAAA,IAAH,+FAMVG,EAAiBH,EAAAA,EAAAA,IAAH,8DAKdI,EAAKJ,EAAAA,EAAAA,GAAH,0CAIFK,EAAKL,EAAAA,EAAAA,GAAH,8EAMFM,EAAKN,EAAAA,EAAAA,GAAH,gDAIFO,EAAMP,EAAAA,EAAAA,IAAH,6FAOHQ,EAAeR,EAAAA,EAAAA,GAAH,+EAMZS,GAAyBT,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,2CAItBU,EAAeV,EAAAA,EAAAA,GAAH,gD,SCjDV,SAASW,EAAT,GAAyD,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,oBAAqBC,EAAQ,EAARA,KAE3DC,EAMEH,EANFG,QACAC,EAKEJ,EALFI,YACAC,EAIEL,EAJFK,eACAC,EAGEN,EAHFM,aACAC,EAEEP,EAFFO,SACAC,EACER,EADFQ,OAGF,OACE,iCACE,SAACrB,EAAD,CAAYsB,GAAIR,EAAoBS,QAApC,sBAEA,UAACpB,EAAD,YACE,SAACK,EAAD,CACEgB,IAAG,0CAAqCP,GACxCQ,IAAKT,KAEP,UAACZ,EAAD,YACE,0BACGc,EADH,KACqBH,EADrB,QAGA,wCAAgBW,KAAKC,MAAqB,GAAfR,GAA3B,QACA,SAACZ,EAAD,wBACA,uBAAIa,KACJ,SAACb,EAAD,sBACA,SAACF,EAAD,UACGgB,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,SAACxB,EAAD,UAAcwB,GAALD,EADC,aAMlB,4BACE,SAACtB,EAAD,uCACA,UAACI,EAAD,YACE,SAACF,EAAD,WACE,SAACC,EAAD,CAAwBY,GAAG,OAA3B,qBAEF,SAACb,EAAD,WACE,SAACC,EAAD,CAAwBY,GAAG,UAA3B,+BAQX,CC1Dc,SAASS,IAAe,IAAD,IACpC,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOnB,EAAP,KAAaoB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXzB,GAAsB0B,EAAAA,EAAAA,QAAM,oBAACF,EAASG,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAU3D,IARAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAAA,eAAmBR,GAASS,MAAK,SAAAhC,GAC/BoB,EAAQpB,GAERsB,EAAU,WACX,GACF,GAAE,CAACC,IAEW,aAAXF,EAAuB,CACzB,IAAInB,EAAOF,EAAKiC,aAAaC,MAAM,IAInC,OAHAhC,EAAKiC,OAAO,GACZjC,EAAOA,EAAKkC,KAAK,KAGf,iCACE,SAACrC,EAAD,CACEC,KAAMA,EACNC,oBAAqBA,EACrBC,KAAMA,KAER,SAAC,KAAD,MAGL,CACF,C","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MoviesDetail.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  display: block;\n  margin-bottom: 12px;\n\n  font-size: 32px;\n  font-weight: 700;\n  text-decoration: none;\n\n  color: #212121;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #e00480;\n  }\n`;\n\nexport const MovieBlock = styled.div`\n  display: flex;\n  width: 1200px;\n  justify-content: space-between;\n`;\n\nexport const MovieInfoBlock = styled.div`\n  width: 780px;\n  margin-top: 40px;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n`;\n\nexport const Li = styled.li`\n  &:not(:last-child) {\n    margin-right: 12px;\n  }\n`;\n\nexport const H2 = styled.h2`\n  margin-bottom: 12px;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  margin-bottom: 12px;\n\n  border-radius: 15px;\n`;\n\nexport const LiAdditional = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const StyledLinkToAdditional = styled(NavLink)`\n  color: #212121;\n`;\n\nexport const UlAdditional = styled.ul`\n  margin-bottom: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledLink,\n  MovieBlock,\n  MovieInfoBlock,\n  Ul,\n  Li,\n  H2,\n  Img,\n  LiAdditional,\n  StyledLinkToAdditional,\n  UlAdditional,\n} from './MovieCard.styled';\n\nexport default function MovieCard({ data, backLinkLocationRef, year }) {\n  const {\n    tagline,\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n\n  return (\n    <>\n      <StyledLink to={backLinkLocationRef.current}>Go Back</StyledLink>\n\n      <MovieBlock>\n        <Img\n          src={`https://image.tmdb.org/t/p/w400/${poster_path}`}\n          alt={tagline}\n        />\n        <MovieInfoBlock>\n          <h1>\n            {original_title} ({year})\n          </h1>\n          <p>User score: {Math.round(vote_average * 10)}%</p>\n          <H2>Overview</H2>\n          <p>{overview}</p>\n          <H2>Genres</H2>\n          <Ul>\n            {genres.map(({ id, name }) => (\n              <Li key={id}>{name}</Li>\n            ))}\n          </Ul>\n        </MovieInfoBlock>\n      </MovieBlock>\n      <div>\n        <H2> Additional information</H2>\n        <UlAdditional>\n          <LiAdditional>\n            <StyledLinkToAdditional to=\"cast\">Cast</StyledLinkToAdditional>\n          </LiAdditional>\n          <LiAdditional>\n            <StyledLinkToAdditional to=\"reviews\">\n              Reviews\n            </StyledLinkToAdditional>\n          </LiAdditional>\n        </UlAdditional>\n      </div>\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  data: PropTypes.object.isRequired,\n  backLinkLocationRef: PropTypes.object.isRequired,\n  year: PropTypes.string.isRequired,\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport api from 'services/api';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nexport default function MovieDetail() {\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    api.fetchMovieByID(movieId).then(data => {\n      setData(data);\n\n      setStatus('resolved');\n    });\n  }, [movieId]);\n\n  if (status === 'resolved') {\n    let year = data.release_date.split('');\n    year.splice(4);\n    year = year.join('');\n\n    return (\n      <>\n        <MovieCard\n          data={data}\n          backLinkLocationRef={backLinkLocationRef}\n          year={year}\n        />\n        <Outlet />\n      </>\n    );\n  }\n}\n"],"names":["StyledLink","styled","NavLink","MovieBlock","MovieInfoBlock","Ul","Li","H2","Img","LiAdditional","StyledLinkToAdditional","UlAdditional","MovieCard","data","backLinkLocationRef","year","tagline","poster_path","original_title","vote_average","overview","genres","to","current","src","alt","Math","round","map","id","name","MovieDetail","useState","setData","status","setStatus","movieId","useParams","location","useLocation","useRef","state","from","useEffect","api","then","release_date","split","splice","join"],"sourceRoot":""}