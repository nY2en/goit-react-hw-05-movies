{"version":3,"file":"static/js/522.ec36733e.chunk.js","mappings":"wMAGaA,EAAKC,EAAAA,EAAAA,GAAH,+CAIFC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,wG,SCJR,SAASG,EAAT,GAAwC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACxC,OACE,wBACGD,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACR,SAACT,EAAD,WACE,SAACE,EAAD,CAAYQ,MAAO,CAAEC,KAAML,GAAYM,GAAE,kBAAaJ,GAAtD,SACGC,KAFID,EADD,KASf,C,2ICbYK,EAAOZ,EAAAA,EAAAA,KAAH,6JASJa,EAAQb,EAAAA,EAAAA,MAAH,kXAoBLc,EAASd,EAAAA,EAAAA,OAAH,6Z,SC3BJ,SAASe,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAcA,OACE,UAACP,EAAD,CAAMI,SATiB,SAAAI,GACvBA,EAAEC,iBAEFL,EAASE,GAETC,EAAS,GACV,EAGC,WACE,SAACN,EAAD,CAAOS,MAAOJ,EAAOK,SAdC,SAAAH,GACxBD,EAASC,EAAEI,OAAOF,MACnB,KAaG,SAACR,EAAD,uBAGL,C,aCnBc,SAASW,IAAU,IAAD,EAC/B,GAAwBR,EAAAA,EAAAA,UAAS,MAAjC,eAAOb,EAAP,KAAasB,EAAb,KACA,GAA4BT,EAAAA,EAAAA,UAAS,QAArC,eAAOU,EAAP,KAAeC,EAAf,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAoBC,EAApB,KACMb,EAAK,UAAGY,EAAYE,IAAI,gBAAnB,QAA+B,GACpC3B,GAAW4B,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACM,KAAVhB,GAIJiB,EAAAA,GAAAA,wBAA4BjB,GAAOkB,MAAK,SAAAhC,GACtCsB,EAAQtB,EAAKiC,SAEbT,EAAU,WACX,GACF,GAAE,CAACV,IAMJ,OACE,iCACE,SAACH,EAAD,CAAWC,SANE,SAAAE,GACfa,EAAgB,CAAEb,MAAAA,GACnB,IAKe,aAAXS,IAAyB,SAACxB,EAAA,EAAD,CAAWC,KAAMA,EAAMC,SAAUA,MAGhE,C","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Li = styled.li`\n  margin-bottom: 8px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 24px;\n\n  color: black;\n\n  &:hover {\n    color: #e00480;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Li, StyledLink } from './MovieList.styled';\n\nexport default function MovieList({ data, location }) {\n  return (\n    <ul>\n      {data.map(({ id, original_title }) => (\n        <Li key={id}>\n          <StyledLink state={{ from: location }} to={`/movies/${id}`}>\n            {original_title}\n          </StyledLink>\n        </Li>\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  data: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 600px;\n  height: 55px;\n  margin: 25px auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  height: 100%;\n  padding-left: 8px;\n\n  font-size: 24px;\n\n  border-radius: 4px;\n  border: 3px solid rgba(255, 255, 255, 0.3);\n  border-color: #3392b1;\n  background: rgba(33, 150, 243, 0);\n  outline: none;\n\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus {\n    border-color: #e00480;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 200px;\n  height: 100%;\n\n  font-size: 32px;\n\n  color: #ffffff;\n  background: #3392b1;\n\n  border-radius: 4px;\n\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.15);\n  border: none;\n\n  cursor: pointer;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from './Searchbar.styled';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(query);\n\n    setQuery('');\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Input value={query} onChange={handleInputChange} />\n      <Button>Search</Button>\n    </Form>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport api from 'services/api';\nimport Searchbar from 'components/Searchbar';\nimport MovieList from 'components/MovieList';\n\nexport default function Movies() {\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [searchParam, setSearchParams] = useSearchParams();\n  const query = searchParam.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    api.fetchMovieBySearchQuery(query).then(data => {\n      setData(data.results);\n\n      setStatus('resolved');\n    });\n  }, [query]);\n\n  const onSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={onSubmit} />\n      {status === 'resolved' && <MovieList data={data} location={location} />}\n    </>\n  );\n}\n"],"names":["Li","styled","StyledLink","NavLink","MovieList","data","location","map","id","original_title","state","from","to","Form","Input","Button","Searchbar","onSubmit","useState","query","setQuery","e","preventDefault","value","onChange","target","Movies","setData","status","setStatus","useSearchParams","searchParam","setSearchParams","get","useLocation","useEffect","api","then","results"],"sourceRoot":""}