{"version":3,"file":"static/js/654.0345a8ab.chunk.js","mappings":"4OAGe,SAASA,EAAT,GAAyD,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,oBAAqBC,EAAQ,EAARA,KAE3DC,EAMEH,EANFG,QACAC,EAKEJ,EALFI,YACAC,EAIEL,EAJFK,eACAC,EAGEN,EAHFM,aACAC,EAEEP,EAFFO,SACAC,EACER,EADFQ,OAGF,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIR,EAAoBS,QAA9B,sBAEA,iBAAKC,MAAO,CAAEC,QAAS,QAAvB,WACE,gBACEC,IAAG,0CAAqCT,GACxCU,IAAKX,KAEP,4BACE,0BACGE,EADH,KACqBH,EADrB,QAGA,wCAAgBa,KAAKC,MAAqB,GAAfV,GAA3B,SACA,sCACA,uBAAIC,KACJ,oCACA,wBACGC,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,aAMlB,4BACE,qDACA,2BACE,yBACE,SAAC,KAAD,CAAMT,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,+BAMX,CC7Cc,SAASW,IAAe,IAAD,IACpC,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOrB,EAAP,KAAasB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACX3B,GAAsB4B,EAAAA,EAAAA,QAAM,oBAACF,EAASG,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAU3D,IARAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAAA,eAAmBR,GAASS,MAAK,SAAAlC,GAC/BsB,EAAQtB,GAERwB,EAAU,WACX,GACF,GAAE,CAACC,IAEW,aAAXF,EAAuB,CACzB,IAAIrB,EAAOF,EAAKmC,aAAaC,MAAM,IAInC,OAHAlC,EAAKmC,OAAO,GACZnC,EAAOA,EAAKoC,KAAK,KAGf,iCACE,SAACvC,EAAD,CACEC,KAAMA,EACNC,oBAAqBA,EACrBC,KAAMA,KAER,SAAC,KAAD,MAGL,CACF,C","sources":["components/MovieCard/MovieCard.jsx","pages/MoviesDetail.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieCard({ data, backLinkLocationRef, year }) {\n  const {\n    tagline,\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go Back</Link>\n\n      <div style={{ display: 'flex' }}>\n        <img\n          src={`https://image.tmdb.org/t/p/w400/${poster_path}`}\n          alt={tagline}\n        />\n        <div>\n          <h1>\n            {original_title} ({year})\n          </h1>\n          <p>User score: {Math.round(vote_average * 10)} %</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div>\n        <h2> Additional information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  data: PropTypes.object.isRequired,\n  backLinkLocationRef: PropTypes.object.isRequired,\n  year: PropTypes.string.isRequired,\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport api from 'services/api';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nexport default function MovieDetail() {\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    api.fetchMovieByID(movieId).then(data => {\n      setData(data);\n\n      setStatus('resolved');\n    });\n  }, [movieId]);\n\n  if (status === 'resolved') {\n    let year = data.release_date.split('');\n    year.splice(4);\n    year = year.join('');\n\n    return (\n      <>\n        <MovieCard\n          data={data}\n          backLinkLocationRef={backLinkLocationRef}\n          year={year}\n        />\n        <Outlet />\n      </>\n    );\n  }\n}\n"],"names":["MovieCard","data","backLinkLocationRef","year","tagline","poster_path","original_title","vote_average","overview","genres","to","current","style","display","src","alt","Math","round","map","id","name","MovieDetail","useState","setData","status","setStatus","movieId","useParams","location","useLocation","useRef","state","from","useEffect","api","then","release_date","split","splice","join"],"sourceRoot":""}